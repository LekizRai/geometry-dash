(()=>{"use strict";var e,t={668:(e,t,s)=>{var i=s(440),a=s.n(i);class r{constructor(e){this.scene=e,this.objectListDictionary={}}load(e){this.tileMap=this.scene.make.tilemap({key:`tile-map-level-${e}`,tileWidth:32,tileHeight:32});const t=this.tileMap.addTilesetImage("geometry-dash","geometry-dash");if(t){const e=this.tileMap.createLayer("foreground",t,0,0);e&&(this.foregroundLayer=e),this.foregroundLayer.setCollisionByProperty({isCollided:!0})}}initializeObjectList(e){const t=this.tileMap.createFromObjects("objects",{name:e,classType:Phaser.Physics.Arcade.Sprite});t.length>0&&(t.forEach((e=>{e instanceof Phaser.Physics.Arcade.Sprite&&(e.setY(e.y),e.setX(e.x),e.setVisible(!1),this.scene.physics.add.existing(e))})),this.objectListDictionary[e]=t)}addActionToObjectList(e,t){this.objectListDictionary[e]&&this.objectListDictionary[e].forEach((e=>{t(e)}))}getWidth(){return this.tileMap.widthInPixels}getForegroundLayer(){return this.foregroundLayer}setForegroundColor(e){this.foregroundLayer.setTint(e)}substract(){}}class o{constructor(e,t,s,i){this.scene=e,this.playerIndex=t,this.sprite=s?i?this.scene.physics.add.sprite(s,i,`player-${t}`):this.scene.physics.add.sprite(s,0,`player-${t}`):this.scene.physics.add.sprite(0,0,`player-${t}`),this.ship=this.scene.physics.add.sprite(this.sprite.x,this.sprite.y,`ship-${t}`),this.ship.setVisible(!1),this.ship.enableBody(!1),this.isRunning=!0,this.rotationTween=this.scene.add.tween({key:"player-rotation",targets:this.sprite,rotation:Math.PI,duration:440,persist:!0})}initialize(){this.setVelocityX(560),this.setGravityY(4745.61),this.sprite.setVisible(!0)}getX(){return this.sprite.x}getY(){return this.sprite.y}setX(e){this.sprite.setX(e)}setY(e){this.sprite.setY(e)}getVelocityX(){return this.sprite.body.velocity.x}getVelocityY(){return this.sprite.body.velocity.y}setVelocityX(e){this.sprite.setVelocityX(e)}setVelocityY(e){this.sprite.setVelocityY(e)}getGravityX(){return this.sprite.body.gravity.x}getGravityY(){return this.sprite.body.gravity.y}setGravityX(e){this.sprite.body.setGravityX(e)}setGravityY(e){this.sprite.body.setGravityY(e)}getAngularVelocity(){return this.sprite.body.angularVelocity}setAngularVelocity(e){this.sprite.setAngularVelocity(e)}setColor(e){this.sprite.setTint(e)}setVisible(e){this.sprite.setVisible(e)}act(){this.isRunning?this.sprite.body.blocked.down&&(this.sprite.setVelocityY(-1193.18),this.sprite.setRotation(0),this.rotationTween.restart()):this.sprite.setVelocityY(-200)}changeToFlyingState(){this.isRunning&&(this.isRunning=!1,this.ship.setVisible(!0),this.ship.enableBody(!0),this.sprite.setVelocityX(560),this.sprite.setGravityY(200))}changeToRunningState(){this.isRunning||(this.isRunning=!0,this.ship.setVisible(!1),this.ship.enableBody(!1),this.sprite.setRotation(0),this.sprite.setVelocityX(560),this.sprite.setGravityY(4745.61))}collideWith(e,t){t?e instanceof Phaser.GameObjects.GameObject?this.scene.physics.add.collider(e,this.sprite,t):this.scene.physics.add.collider(e.getForegroundLayer(),this.sprite,t):e instanceof Phaser.GameObjects.GameObject?this.scene.physics.add.collider(e,this.sprite):this.scene.physics.add.collider(e.getForegroundLayer(),this.sprite)}overlapWith(e,t){this.scene.physics.add.overlap(e,this.sprite,t)}setParticle(){this.particle&&this.particle.destroy(),this.particle=this.scene.add.particles(0,0,`particle-${this.playerIndex}`,{lifespan:200,angle:{min:-100,max:-80},scale:{start:.75,end:0},speed:{min:100,max:200},alpha:{start:1,end:0},frequency:50,blendMode:"ADD"}),this.particle.startFollow(this.sprite,-32,32)}burstParticle(){this.particle.setParticleScale(.75,.75),this.particle.setParticleLifespan(1e3),this.particle.ops.angle.loadConfig({angle:{min:0,max:360}}),this.particle.stopFollow(),this.particle.explode(50,this.sprite.x,this.sprite.y),this.sprite.setVisible(!1),this.sprite.setVelocityX(0),this.sprite.setVelocityY(0),this.sprite.setGravityX(0),this.sprite.setGravityY(0)}update(){if(this.isRunning)this.sprite.body.blocked.down&&this.rotationTween.isPlaying()&&(this.rotationTween.pause(),this.sprite.setRotation(0));else{let e=Math.atan(this.getVelocityY()/this.getVelocityX());Number.isNaN(e)&&(e=0),this.sprite.setRotation(e),this.ship.setRotation(e);const t=Math.sqrt(Math.pow(30*Math.tan(e),2)/(1+Math.pow(Math.tan(e),2)));let s=t/Math.tan(e);Number.isNaN(s)&&(s=30),s>0?(this.ship.setX(this.sprite.x-t),this.ship.setY(this.sprite.y+s)):(this.ship.setX(this.sprite.x+t),this.ship.setY(this.sprite.y-s))}}}class n extends Phaser.Scene{constructor(){super("pause")}preload(){}create(){this.score=this.add.text(620,12,"0%",{fontFamily:"Comic Sans MS",fontSize:30}),this.bestScore=this.add.text(18,18,"Best score: 0%",{fontFamily:"Comic Sans MS",fontSize:20}),this.congratsText=this.add.text(290,120,"Congratulation !!",{fontFamily:"Comic Sans MS",fontSize:30}),this.congratsText.setVisible(!1),this.progressBar=this.add.graphics({fillStyle:{color:65280}}),this.add.image(400,30,"progress-bar"),this.pauseBackground=this.add.graphics({fillStyle:{color:16777215,alpha:.3}}).fillRect(150,100,500,250),this.pauseBackground.setVisible(!1),this.pauseBackground=this.add.graphics({fillStyle:{color:16777215,alpha:.3}}).fillRoundedRect(150,100,500,250,64),this.pauseBackground.setVisible(!1),this.resumeButton=this.add.image(400,225,"resume-button").setInteractive(),this.resumeButton.setVisible(!1),this.resumeButton.on("pointerdown",(()=>{this.scene.resume("gameplay"),this.scene.resume("background"),this.resumeButton.setVisible(!1),this.replayButton.setVisible(!1),this.menuButton.setVisible(!1),this.pauseBackground.setVisible(!1),this.pauseButton.setVisible(!0)})),this.replayButton=this.add.image(300,225,"replay-button").setScale(1.3).setInteractive(),this.replayButton.setVisible(!1),this.replayButton.on("pointerdown",(()=>{this.gameplayScene.restart(),this.scene.resume("gameplay"),this.scene.resume("background"),this.resumeButton.setVisible(!1),this.replayButton.setVisible(!1),this.menuButton.setVisible(!1),this.pauseBackground.setVisible(!1),this.congratsText.setVisible(!1),this.pauseButton.setVisible(!0)})),this.menuButton=this.add.image(500,225,"menu-button").setScale(.65).setInteractive(),this.menuButton.setVisible(!1),this.menuButton.on("pointerdown",(()=>{this.scene.resume("background"),this.scene.stop("gameplay"),this.scene.stop("pause"),this.scene.start("start")})),this.pauseButton=this.add.image(700,24,"pause-button").setOrigin(0,0).setInteractive(),this.pauseButton.on("pointerdown",(()=>{this.scene.pause("gameplay"),this.scene.pause("background"),this.resumeButton.setVisible(!0),this.replayButton.setVisible(!0),this.menuButton.setVisible(!0),this.pauseBackground.setVisible(!0),this.pauseButton.setVisible(!1)})),this.cameras.main.setViewport(0,0,800,450),this.scene.bringToTop()}displayWinWindow(){this.congratsText.setVisible(!0),this.pauseBackground.setVisible(!0),this.replayButton.setVisible(!0),this.menuButton.setVisible(!0)}update(e,t){if(!this.gameplayScene){const e=this.scene.manager.getScene("gameplay");e instanceof l&&(this.gameplayScene=e)}const s=localStorage.getItem(`level-${this.gameplayScene.getLevel()}-best`);s?this.bestScore.setText(`Best score: ${s}%`):(this.bestScore.setText("Best score: 0%"),localStorage.setItem(`level-${this.gameplayScene.getLevel()}-best`,"0")),this.progressBar.clear();const i=this.gameplayScene.getCompletingPercent();this.progressBar.fillRect(196,20,408*i,20),this.score.setText(`${Math.min(Math.ceil(100*i),100)}%`)}}class l extends Phaser.Scene{constructor(){super("gameplay"),this.level=1,this.playerIndex=1}getLevel(){return this.level}getPlayerIndex(){return this.playerIndex}setLevel(e){this.level=e}setPlayerIndex(e){this.playerIndex=e}preload(){}create(){var e,t,s;this.won=!1,this.physics.world.TILE_BIAS=36,this.physics.world.setBoundsCollision(!1,!1,!1,!1),this.gameMap=new r(this),this.gameMap.load(this.level),this.gameMap.setForegroundColor(3014406),this.mapWidth=this.gameMap.getWidth(),this.player=new o(this,this.playerIndex,300,1050),this.player.setColor(16777215),this.player.setVelocityX(560),this.player.setGravityY(4745.61),this.player.setParticle(),this.player.collideWith(this.gameMap,(()=>{})),this.gameMap.initializeObjectList("spike"),this.gameMap.addActionToObjectList("spike",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{const t=localStorage.getItem(`level-${this.level}-best`);if(t){let e=Number(t);Math.ceil(100*this.getCompletingPercent())>e&&(e=Math.ceil(100*this.getCompletingPercent()),localStorage.setItem(`level-${this.level}-best`,String(e)))}else localStorage.setItem(`level-${this.level}-best`,"0");this.overlapStarted(e)&&(this.player.burstParticle(),this.doDeathEffect())}))})),this.gameMap.initializeObjectList("jump"),this.gameMap.addActionToObjectList("jump",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.player.setVelocityY(-1789.77)}))})),this.gameMap.initializeObjectList("win-start"),this.gameMap.addActionToObjectList("win-start",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&(this.camera.stopFollow(),this.player.setGravityY(0),this.player.setVelocityX(0),this.player.setVelocityY(-300),this.player.setGravityX(1e3))}))})),this.gameMap.initializeObjectList("win-end"),this.gameMap.addActionToObjectList("win-end",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.won=!0;const t=localStorage.getItem(`level-${this.level}-best`);if(t){let e=Number(t);Math.ceil(100*this.getCompletingPercent())>e&&(e=Math.ceil(100*this.getCompletingPercent()),localStorage.setItem(`level-${this.level}-best`,String(e)))}else localStorage.setItem(`level-${this.level}-best`,"0");if(this.overlapStarted(e)){this.player.burstParticle();const e=this.scene.manager.getScene("pause");e instanceof n&&e.displayWinWindow()}}))})),this.gameMap.initializeObjectList("camera-up"),this.gameMap.addActionToObjectList("camera-up",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.add.tween({targets:this.cameraFollowObject,y:this.cameraFollowObject.y-128,duration:500})}))})),this.gameMap.initializeObjectList("camera-down"),this.gameMap.addActionToObjectList("camera-down",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.add.tween({targets:this.cameraFollowObject,y:this.cameraFollowObject.y+128,duration:500})}))})),this.gameMap.initializeObjectList("camera-half-up"),this.gameMap.addActionToObjectList("camera-half-up",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.add.tween({targets:this.cameraFollowObject,y:this.cameraFollowObject.y-64,duration:500})}))})),this.gameMap.initializeObjectList("camera-half-down"),this.gameMap.addActionToObjectList("camera-half-down",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.add.tween({targets:this.cameraFollowObject,y:this.cameraFollowObject.y+64,duration:500})}))})),this.gameMap.initializeObjectList("flying"),this.gameMap.addActionToObjectList("flying",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.player.changeToFlyingState()}))})),this.gameMap.initializeObjectList("running"),this.gameMap.addActionToObjectList("running",(e=>{e instanceof Phaser.Physics.Arcade.Sprite&&this.player.overlapWith(e,(()=>{this.overlapStarted(e)&&this.player.changeToRunningState()}))})),this.cameraFollowObject=this.physics.add.sprite(300,1450,"player"),this.cameraFollowObject.body.setAllowGravity(!1),this.cameraFollowObject.setVisible(!1),this.camera=this.cameras.main.setSize(800,450).setZoom(.75),this.cameras.main.startFollow(this.cameraFollowObject,!1,.5,.5,-300,0),this.cursors=this.input.keyboard.createCursorKeys(),this.input.on("pointerdown",(()=>{this.player.act()})),null===(e=this.input.keyboard)||void 0===e||e.on("keydown-SPACE",(()=>{this.player.act()})),null===(t=this.input.keyboard)||void 0===t||t.on("keydown-UP",(()=>{this.player.act()})),null===(s=this.input.keyboard)||void 0===s||s.on("keydown-DOWN",(()=>{this.player.changeToFlyingState()}));const i=this.add.zone(0,0,800,450).setOrigin(0,0);i.setSize(800,450),this.scene.launch("pause"),this.add.zone(0,0,800,450).setOrigin(0,0),i.setSize(800,450),this.scene.launch("background")}update(e,t){this.player.update(),this.cameraFollowObject.setX(this.player.getX()),(this.cursors.space.isDown||this.cursors.up.isDown)&&this.player.act(),this.player.getY()>2e3&&this.doDeathEffect()}doDeathEffect(){this.camera.shake(250,.01),this.time.addEvent({delay:2e3,callback:()=>{this.restart()}})}doWinAction(){}restart(){this.camera.resetFX(),this.player.setX(300),this.player.setY(1050),this.player.setVisible(!0),this.player.setVelocityX(560),this.player.setGravityY(4745.61),this.player.setParticle(),this.cameraFollowObject.setX(300),this.cameraFollowObject.setY(1450),this.camera.startFollow(this.cameraFollowObject)}getCompletingPercent(){return this.won?1:this.player.getX()/this.mapWidth}overlapStarted(e){return!!e.body&&!e.body.touching.none&&e.body.wasTouching.none}}class h extends Phaser.Scene{constructor(){super("player-choosing")}preload(){this.add.text(250,50,"Chooing your player",{fontFamily:"Comic Sans MS",fontSize:32}),this.add.graphics({fillStyle:{color:16777215,alpha:.3}}).fillRoundedRect(150,100,500,250,64),this.add.image(300,225,"player-1").setInteractive().on("pointerdown",(()=>{this.scene.stop("player-choosing");const e=this.scene.manager.getScene("gameplay");e instanceof l&&e.setPlayerIndex(1),this.scene.start("start")})),this.add.image(500,225,"player-2").setInteractive().on("pointerdown",(()=>{this.scene.stop("player-choosing");const e=this.scene.manager.getScene("gameplay");e instanceof l&&e.setPlayerIndex(2),this.scene.start("start")}))}create(){}}class c extends Phaser.Scene{constructor(){super("background")}preload(){}create(){this.backgrounds=this.physics.add.group({allowGravity:!1,velocityX:-200}),this.backgrounds.create(0,0,"background").setOrigin(0,0).setTint(255),this.backgrounds.create(512,0,"background").setOrigin(0,0).setTint(255),this.backgrounds.create(1024,0,"background").setOrigin(0,0).setTint(255),this.cameras.main.setViewport(0,0,800,450),this.scene.sendToBack()}update(){let e=-1e9;this.backgrounds.children.iterate((t=>(t instanceof Phaser.Physics.Arcade.Sprite&&t.x+512>e&&(e=t.x+512),!0))),this.backgrounds.children.iterate((t=>(t instanceof Phaser.Physics.Arcade.Sprite&&t.x+t.displayWidth<0&&t.setX(e),!0)))}}class p extends Phaser.Scene{constructor(){super("level-choosing")}preload(){this.add.text(260,50,"Chooing your level",{fontFamily:"Comic Sans MS",fontSize:32}),this.add.graphics({fillStyle:{color:16777215,alpha:.3}}).fillRoundedRect(150,100,500,250,64),this.add.image(250,225,"level-button").setInteractive().on("pointerdown",(()=>{this.scene.stop("level-choosing");const e=this.scene.manager.getScene("gameplay");e instanceof l&&e.setLevel(1),this.scene.start("start")})),this.add.image(350,225,"level-button").setInteractive().on("pointerdown",(()=>{this.scene.stop("level-choosing");const e=this.scene.manager.getScene("gameplay");e instanceof l&&e.setLevel(2),this.scene.start("start")})),this.add.image(450,225,"level-button").setInteractive().on("pointerdown",(()=>{this.scene.stop("level-choosing");const e=this.scene.manager.getScene("gameplay");e instanceof l&&e.setLevel(1),this.scene.start("start")})),this.add.image(550,225,"level-button").setInteractive().on("pointerdown",(()=>{this.scene.stop("level-choosing");const e=this.scene.manager.getScene("gameplay");e instanceof l&&e.setLevel(4),this.scene.start("start")}))}create(){}}class d extends Phaser.Scene{constructor(){super("preload")}preload(){this.load.audio("audio-level-1","assets/audios/levels/level-1.mp3"),this.load.image("progress-bar","assets/images/preload/progress-bar.png"),this.load.image("play-button","assets/images/buttons/play.png"),this.load.image("player-button","assets/images/buttons/player-choosing.png"),this.load.image("more-button","assets/images/buttons/more-game.png"),this.load.image("level-button","assets/images/buttons/level.png"),this.load.image("geometry-dash","assets/images/tileset/spritesheet.png"),this.load.image("player-1","assets/images/players/player-1/player.png"),this.load.image("particle-1","assets/images/players/player-1/particle.png"),this.load.image("ship-1","assets/images/players/player-1/ship.png"),this.load.image("player-2","assets/images/players/player-2/player.png"),this.load.image("particle-2","assets/images/players/player-2/particle.png"),this.load.image("ship-2","assets/images/players/player-2/ship.png"),this.load.tilemapTiledJSON("tile-map-level-1","assets/tilemaps/level-1.tmj"),this.load.tilemapTiledJSON("tile-map-level-2","assets/tilemaps/level-2.tmj"),this.load.tilemapTiledJSON("tile-map-level-4","assets/tilemaps/level-win.tmj"),this.load.image("resume-button","assets/images/buttons/resume.png"),this.load.image("replay-button","assets/images/buttons/replay.png"),this.load.image("menu-button","assets/images/buttons/menu.png"),this.load.image("pause-button","assets/images/buttons/pause.png"),this.add.graphics({fillStyle:{color:16777215}}).fillRect(100,this.game.config.height/2+100,this.game.config.width-200,30);const e=this.add.graphics({fillStyle:{color:65280}});this.load.on("progress",(t=>{console.log(t),e.fillRect(100,this.game.config.height/2+100,(this.game.config.width-200)*t,30)}))}create(){const e=new c;this.scene.add("background",e);const t=new h;this.scene.add("player-choosing",t);const s=new p;this.scene.add("level-choosing",s);const i=new n;this.scene.add("pause",i),this.time.addEvent({delay:500,callback:()=>{this.scene.stop("init"),this.scene.stop("preload"),this.scene.start("start")}})}update(e,t){}}class g extends Phaser.Scene{constructor(){super("start")}preload(){}create(){this.cameras.main.setSize(800,450),this.add.image(150,50,"geometry-dash-logo").setOrigin(0,0).setScale(1.2),this.playButton=this.add.image(400,250,"play-button"),this.playButton.setInteractive(),this.playButton.on("pointerover",(()=>{this.playButton.setAlpha(.8)})),this.playButton.on("pointerout",(()=>{this.playButton.setAlpha(1)})),this.playButton.on("pointerdown",(()=>{this.playButton.setAlpha(.5),this.scene.stop("start"),this.scene.start("gameplay")})),this.playerChoosingButton=this.add.sprite(200,250,"player-button"),this.playerChoosingButton.setInteractive(),this.playerChoosingButton.on("pointerover",(()=>{this.add.tween({targets:this.playerChoosingButton,scale:.9,duration:100})})),this.playerChoosingButton.on("pointerout",(()=>{this.add.tween({targets:this.playerChoosingButton,scale:1,duration:100})})),this.playerChoosingButton.on("pointerdown",(()=>{this.scene.stop("start"),this.scene.start("player-choosing")})),this.moreGameButton=this.add.image(600,250,"more-button"),this.moreGameButton.setInteractive(),this.moreGameButton.on("pointerover",(()=>{this.add.tween({targets:this.moreGameButton,scale:.9,duration:100})})),this.moreGameButton.on("pointerout",(()=>{this.add.tween({targets:this.moreGameButton,scale:1,duration:100})})),this.moreGameButton.on("pointerdown",(()=>{this.scene.stop("start"),this.scene.start("level-choosing")})),this.add.zone(0,0,800,450).setOrigin(0),this.scene.launch("background")}}class y extends Phaser.Scene{constructor(){super("init")}preload(){this.load.image("background","assets/images/backgrounds/background-1.png"),this.load.image("geometry-dash-logo","assets/images/preload/logo.png"),this.load.image("lite-logo","assets/images/preload/lite.png")}create(){this.add.image(0,0,"background").setOrigin(0,0).setTint(255),this.add.image(512,0,"background").setOrigin(0,0).setTint(255),this.add.image(150,100,"geometry-dash-logo").setOrigin(0,0).setScale(1.2),this.add.image(320,180,"lite-logo").setOrigin(0,0).setScale(2),this.add.zone(0,0,800,450).setOrigin(0,0).setSize(800,450),this.scene.launch("preload")}update(e,t){}}const u={type:a().AUTO,width:800,height:450,physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!0}},scale:{mode:a().Scale.FIT,autoCenter:a().Scale.CENTER_BOTH},scene:[y,d,g,l]};new(a().Game)(u)}},s={};function i(e){var a=s[e];if(void 0!==a)return a.exports;var r=s[e]={exports:{}};return t[e].call(r.exports,r,r.exports,i),r.exports}i.m=t,e=[],i.O=(t,s,a,r)=>{if(!s){var o=1/0;for(c=0;c<e.length;c++){for(var[s,a,r]=e[c],n=!0,l=0;l<s.length;l++)(!1&r||o>=r)&&Object.keys(i.O).every((e=>i.O[e](s[l])))?s.splice(l--,1):(n=!1,r<o&&(o=r));if(n){e.splice(c--,1);var h=a();void 0!==h&&(t=h)}}return t}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[s,a,r]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={792:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var a,r,[o,n,l]=s,h=0;if(o.some((t=>0!==e[t]))){for(a in n)i.o(n,a)&&(i.m[a]=n[a]);if(l)var c=l(i)}for(t&&t(s);h<o.length;h++)r=o[h],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(c)},s=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})();var a=i.O(void 0,[96],(()=>i(668)));a=i.O(a)})();